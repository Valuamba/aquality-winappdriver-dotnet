variables:
  buildConfiguration: 'Release'
  isRemote: true

trigger:
- master

pool:
  vmImage: 'windows-latest'

steps:
- task: GitVersion@5
  displayName: 'Run GitVersion'
  inputs:
    runtime: 'core'

- task: SonarCloudPrepare@1
  displayName: 'Prepare SonarCloud analysis'
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'aqualityautomation'
    projectKey: 'aquality-automation_aquality-winappdriver-dotnet'
    projectName: 'aquality-winappdriver-dotnet'
    projectVersion: '$(Build.BuildNumber)'
    extraProperties: |
      sonar.coverage.exclusions=**/**

- task: DotNetCoreCLI@2
  displayName: 'Build solution'
  inputs:
    command: 'build'
    projects: Aquality.WinAppDriver/Aquality.WinAppDriver.sln
    arguments: -c $(buildConfiguration)

- task: SonarCloudAnalyze@1
  displayName: 'Run SonarCloud code analysis'
  continueOnError: true

- task: SonarCloudPublish@1
  displayName: 'Publish SonarCloud quality gate results'
  continueOnError: true

- task: Windows Application Driver@0
  displayName: 'Start WinAppDriver'
  inputs:
    OperationType: 'Start'

- task: DotNetCoreCLI@2
  displayName: 'Run tests'
  inputs:
    command: 'test'
    projects: '**/*Tests*/*.csproj'
    arguments: -c $(buildConfiguration) --no-build
    publishTestResults: true

- task: Windows Application Driver@0
  displayName: Stop WinAppDriver
  inputs:
    OperationType: 'Stop'

- script: dotnet pack Aquality.WinAppDriver\src\Aquality.WinAppDriver\Aquality.WinAppDriver.csproj -c $(buildConfiguration) --no-build -p:Version=$(GitVersion.NuGetVersion) -o $(Build.ArtifactStagingDirectory)
  displayName: 'Pack to NuGet package'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

- task: GitHubRelease@0
  displayName: 'Create tag on GitHub'
  inputs:
    gitHubConnection: 'GitHub'
    repositoryName: 'aquality-automation/aquality-winappdriver-dotnet'
    action: 'create'
    tag: 'v$(GitVersion.NuGetVersion)'
    tagSource: 'manual'
    isPreRelease: contains(variables['GitVersion.NuGetVersion'], '-')
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

- task: PublishBuildArtifacts@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'
    artifactName: '_aquality-automation.aquality-winappdriver-dotnet'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))